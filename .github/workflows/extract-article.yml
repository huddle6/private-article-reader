name: Extract Article

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'The URL of the article to extract'
        required: true

jobs:
  extract:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install @extractus/article-extractor

      - name: Create extraction script
        run: |
          echo "const fs = require('fs');" > extract.js
          echo "const input = '${{ github.event.inputs.url }}';" >> extract.js
          echo "import('@extractus/article-extractor').then(({ extract }) => {" >> extract.js
          echo "  async function run() {" >> extract.js
          echo "    try {" >> extract.js
          echo "      const article = await extract(input, { headers: { 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:134.0) Gecko/20100101 Firefox/134.0' }});" >> extract.js
          echo "      console.log(JSON.stringify(article, null, 2));" >> extract.js
          echo "      fs.writeFileSync('extracted-article.json', JSON.stringify(article, null, 2));" >> extract.js
          echo "    } catch (err) {" >> extract.js
          echo "      console.error(err);" >> extract.js
          echo "    }" >> extract.js
          echo "  }" >> extract.js
          echo "  run();" >> extract.js
          echo "});" >> extract.js

      - name: Run article extraction
        run: node extract.js

      - name: Convert JSON to HTML
        run: |
          echo "const fs = require('fs');" > convert.js
          echo "const article = JSON.parse(fs.readFileSync('extracted-article.json', 'utf8'));" >> convert.js
          echo "const htmlContent = \`" >> convert.js
          echo "<!DOCTYPE html>" >> convert.js
          echo "<html lang=\"en\">" >> convert.js
          echo "<head>" >> convert.js
          echo "    <meta charset=\"UTF-8\">" >> convert.js
          echo "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">" >> convert.js
          echo "    <title>\${article.title}</title>" >> convert.js
          echo "    <link rel=\"icon\" href=\"\${article.favicon}\" type=\"image/png\">" >> convert.js
          echo "    <style>" >> convert.js
          echo "        body { font-family: Arial, sans-serif; margin: 20px; }" >> convert.js
          echo "        h1 { color: #333; }" >> convert.js
          echo "        img { max-width: 100%; height: auto; }" >> convert.js
          echo "    </style>" >> convert.js
          echo "</head>" >> convert.js
          echo "<body>" >> convert.js
          echo "    <h1>\${article.title}</h1>" >> convert.js
          echo "    <img src=\"\${article.image}\" alt=\"\${article.title}\\">" >> convert.js
          echo "    <p><strong>Author:</strong> \${article.author}</p>" >> convert.js
          echo "    <p><strong>Published on:</strong> \${new Date(article.published).toLocaleDateString()}</p>" >> convert.js
          echo "    <p>\${article.description}</p>" >> convert.js
          echo "    <div>\${article.content}</div>" >> convert.js
          echo "    <p><strong>Source:</strong> <a href=\"\${article.url}\">\${article.source}</a></p>" >> convert.js
          echo "    <p><strong>Links:</strong> \${article.links.map(link => `<a href=\"\${link}\">\${link}</a>`).join(', ')}</p>" >> convert.js
          echo "</body>" >> convert.js
          echo "</html>\`;" >> convert.js
          echo "fs.writeFileSync('extracted-article.html', htmlContent);" >> convert.js

      - name: Run HTML conversion
        run: node convert.js

      - name: Upload extracted article
        uses: actions/upload-artifact@v4
        with:
          name: extracted-article
          path: extracted-article.json

      - name: Upload HTML article
        uses: actions/upload-artifact@v4
        with:
          name: extracted-article-html
          path: extracted-article.html
