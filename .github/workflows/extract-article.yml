name: Extract Article

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'The URL of the article to extract'
        required: true

jobs:
  extract:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install @extractus/article-extractor

      - name: Run article extraction
        id: extract_article
        run: |
          echo "const input = '${{ github.event.inputs.url }}';" > extract.js
          echo "import('@extractus/article-extractor').then(({ extract }) => {" >> extract.js
          echo "  async function run() {" >> extract.js
          echo "    try {" >> extract.js
          echo "      const article = await extract(input, { headers: { 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:134.0) Gecko/20100101 Firefox/134.0' }});" >> extract.js
          echo "      console.log(JSON.stringify(article, null, 2));" >> extract.js
          echo "      require('fs').writeFileSync('extracted-article.json', JSON.stringify(article, null, 2));" >> extract.js
          echo "    } catch (err) {" >> extract.js
          echo "      console.error(err);" >> extract.js
          echo "    }" >> extract.js
          echo "  }" >> extract.js
          echo "  run();" >> extract.js
          echo "});" >> extract.js
          node extract.js

      - name: Convert JSON to HTML
        run: |
          const fs = require('fs');
          const article = JSON.parse(fs.readFileSync('extracted-article.json', 'utf8'));
          
          // HTML structure
          const htmlContent = `
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>${article.title}</title>
              <link rel="icon" href="${article.favicon}" type="image/png">
              <style>
                  body { font-family: Arial, sans-serif; margin: 20px; }
                  h1 { color: #333; }
                  img { max-width: 100%; height: auto; }
              </style>
          </head>
          <body>
              <h1>${article.title}</h1>
              <img src="${article.image}" alt="${article.title}">
              <p><strong>Author:</strong> ${article.author}</p>
              <p><strong>Published on:</strong> ${new Date(article.published).toLocaleDateString()}</p>
              <p>${article.description}</p>
              <div>${article.content}</div>
              <p><strong>Source:</strong> <a href="${article.url}">${article.source}</a></p>
              <p><strong>Links:</strong> ${article.links.map(link => `<a href="${link}">${link}</a>`).join(', ')}</p>
          </body>
          </html>
          `;

          fs.writeFileSync('extracted-article.html', htmlContent);
          
      - name: Upload extracted article
        uses: actions/upload-artifact@v4
        with:
          name: extracted-article
          path: extracted-article.json

      - name: Upload HTML article
        uses: actions/upload-artifact@v4
        with:
          name: extracted-article-html
          path: extracted-article.html
